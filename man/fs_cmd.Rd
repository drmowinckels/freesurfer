% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fs_cmd.R
\name{fs_cmd}
\alias{fs_cmd}
\title{FS Command Wrapper}
\usage{
fs_cmd(
  func,
  file,
  outfile = NULL,
  retimg = TRUE,
  reorient = FALSE,
  intern = FALSE,
  opts = "",
  verbose = TRUE,
  opts_after_outfile = FALSE,
  frontopts = "",
  bin_app = "bin",
  ...
)
}
\arguments{
\item{func}{(character) Freesurfer command to be executed.}

\item{file}{(character) Path to the input image file.}

\item{outfile}{(character, optional) Path to the output image file. If \code{NULL} (default), the command assumes no separate output file.
Set \code{outfile = file} to overwrite the input file.}

\item{retimg}{(logical, default = \code{TRUE}) Whether to return the output as an image of class \code{nifti}.}

\item{reorient}{(logical, default = \code{FALSE}) If \code{retimg = TRUE}, determines whether the image is reoriented when loaded. Passed to \code{\link[neurobase:readNIfTI2]{neurobase::readnii()}}.}

\item{intern}{(logical, default = \code{FALSE}) Specifies whether to capture the command's output. Passed to \code{\link[base:system]{base::system()}}.}

\item{opts}{(character, default = \code{""}) Additional options to be passed to the Freesurfer command.}

\item{verbose}{(logical, default = \code{TRUE}) Whether to print the generated command before execution. Useful for debugging.}

\item{opts_after_outfile}{(logical, default = \code{FALSE}) Determines whether \code{opts} appear after \code{outfile} in the command.}

\item{frontopts}{(character, default = \code{""}) Options to prepend before the input file in the command.}

\item{bin_app}{(character, default = \code{"bin"}) Appendix for the Freesurfer bin directory, as returned by \code{\link[=get_fs]{get_fs()}}.}

\item{...}{Additional arguments passed to \code{\link[base:system]{base::system()}}.}
}
\value{
If \code{retimg = TRUE}, returns an object of class \code{nifti} containing the output image.
Otherwise, returns the result of the system command execution.
}
\description{
This function serves as a wrapper for Freesurfer commands,
enabling flexible execution of image manipulation tasks.
It allows users to define input and output files, manage
command-line arguments, and optionally process images in memory.
}
\details{
\itemize{
\item To overwrite the input file, set \code{outfile = file}. A warning will be displayed for safety.
\item \code{opts} and \code{frontopts} let you define custom options fielded before or after the file inputs.
\item If opts_after_outfile is \code{TRUE}, the \code{opts} string will be placed after the output file in the command.
}
}
\examples{
\dontrun{

# Basic usage
fs_cmd(
  func = "mri_convert",
  file = "input.mgz",
  outfile = "output.nii.gz",
  opts = "--conform"
)

# Overwriting the input file
fs_cmd(
  func = "mri_convert",
  file = "image.nii.gz",
  outfile = "image.nii.gz",
  opts = "--conform"
)

# Returning output as a nifti object
img <- fs_cmd(
  func = "mri_convert",
  file = "input.mgz",
  retimg = TRUE
)
}
}
