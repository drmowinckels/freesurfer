% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fs_setup.R
\name{get_fs}
\alias{get_fs}
\title{Generate FreeSurfer Command Line Environment Setup}
\usage{
get_fs(bin_app = c("bin", "mni/bin", ""))
}
\arguments{
\item{bin_app}{\link{character} A vector of options for the binary application directory.
Possible options include:
\itemize{
\item \code{"bin"}: Default FreeSurfer binary directory.
\item \code{"mni/bin"}: Includes MNI initialization.
\item \code{""}: Base directory with no specific subdirectories.
}}
}
\value{
\link{character} A bash command string that includes environment setup for FreeSurfer.
If the FreeSurfer environment or required configurations cannot be initialized, the function
throws an error or issues a warning. On success, the returned string can be used directly
in shell operations to load the FreeSurfer environment.
}
\description{
This function generates a bash command string to set up the environment for using FreeSurfer.
It ensures the required FreeSurfer installation, license, and environment setup files are
validated and included in the command string. The function handles different FreeSurfer
binaries like \code{bin}, \code{mni/bin}, and others, while ensuring proper initialization of
the MNI environment if required.
}
\examples{
# Generate a shell command to set up FreeSurfer with the default `bin`
cmd <- get_fs(bin_app = "bin")
print(cmd)

# Generate a shell command to include MNI environment setup
cmd_mni <- get_fs(bin_app = "mni/bin")
print(cmd_mni)

}
\seealso{
\code{\link[=get_fs_home]{get_fs_home()}}, \code{\link[=get_fs_license]{get_fs_license()}}, \code{\link[=get_fs_output]{get_fs_output()}}
}
